# to redeem the value of the variable we use ${LIGHT_YEARS_GAME_TARGET_NAME}
add_executable(${LIGHT_YEARS_GAME_TARGET_NAME}
 ${CMAKE_CURRENT_SOURCE_DIR}/include/gameframework/GameApplication.h
 ${CMAKE_CURRENT_SOURCE_DIR}/src/gameframework/GameApplication.cpp

 ${CMAKE_CURRENT_SOURCE_DIR}/include/spaceship/spaceship.h
 ${CMAKE_CURRENT_SOURCE_DIR}/src/spaceship/spaceship.cpp

  ${CMAKE_CURRENT_SOURCE_DIR}/include/weapon/shooter.h
 ${CMAKE_CURRENT_SOURCE_DIR}/src/weapon/shooter.cpp

 ${CMAKE_CURRENT_SOURCE_DIR}/include/weapon/bulletshooter.h
 ${CMAKE_CURRENT_SOURCE_DIR}/src/weapon/bulletshooter.cpp

 ${CMAKE_CURRENT_SOURCE_DIR}/include/weapon/bullet.h
 ${CMAKE_CURRENT_SOURCE_DIR}/src/weapon/bullet.cpp

 ${CMAKE_CURRENT_SOURCE_DIR}/include/player/PlayerSpaceship.h
 ${CMAKE_CURRENT_SOURCE_DIR}/src/player/PlayerSpaceship.cpp
)

# to find the target library
target_include_directories(${LIGHT_YEARS_GAME_TARGET_NAME} PUBLIC
	${CMAKE_CURRENT_SOURCE_DIR}/include
)

# linking the library so we can include this in our code
target_link_libraries(${LIGHT_YEARS_GAME_TARGET_NAME} PUBLIC ${LIGHT_YEARS_ENGINE_TARGET_NAME})

# to do the repetative task in ease while creating a macro to add the dll in postBuild
function(CopyLibDirToTarget LIB_NAME TARGET_NAME)
add_custom_command(TARGET
${TARGET_NAME}
POST_BUILD
COMMAND
${CMAKE_COMMAND} -E copy_directory
 #FROM
$<TARGET_FILE_DIR:${LIB_NAME}>
 #TO
$<TARGET_FILE_DIR:${TARGET_NAME}>
)	
endfunction()

CopyLibDirToTarget(${LIGHT_YEARS_ENGINE_TARGET_NAME} ${LIGHT_YEARS_GAME_TARGET_NAME})

# set up variables
set(RESOURCE_FOLDER_NAME "assets")
set(RESOURCE_SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/${RESOURCE_FOLDER_NAME}")

 add_custom_command(TARGET ${LIGHT_YEARS_GAME_TARGET_NAME}
	POST_BUILD
	COMMAND
	${CMAKE_COMMAND} -E copy_directory
	${RESOURCE_SRC_DIR}
	$<TARGET_FILE_DIR:${LIGHT_YEARS_GAME_TARGET_NAME}>/${RESOURCE_FOLDER_NAME}
	)

configure_file(
	"config.h.in"
	"${CMAKE_CURRENT_SOURCE_DIR}/include/config.h" ESCAPE_QUOTES
)